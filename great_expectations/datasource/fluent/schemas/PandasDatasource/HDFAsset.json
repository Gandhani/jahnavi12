{
    "title": "HDFAsset",
    "description": "Read from the store, close it if we opened it.\n\nRetrieve pandas object stored in file, optionally based on where\ncriteria.\n\n.. warning::\n\n   Pandas uses PyTables for reading and writing HDF5 files, which allows\n   serializing object-dtype data with pickle when using the \"fixed\" format.\n   Loading pickled data received from untrusted sources can be unsafe.\n\n   See: https://docs.python.org/3/library/pickle.html for more.\n\nParameters\n----------\npath_or_buf : str, path object, pandas.HDFStore\n    Any valid string path is acceptable. Only supports the local file system,\n    remote URLs and file-like objects are not supported.\n\n    If you want to pass in a path object, pandas accepts any\n    ``os.PathLike``.\n\n    Alternatively, pandas accepts an open :class:`pandas.HDFStore` object.\n\nkey : object, optional\n    The group identifier in the store. Can be omitted if the HDF file\n    contains a single pandas object.\nmode : {'r', 'r+', 'a'}, default 'r'\n    Mode to use when opening the file. Ignored if path_or_buf is a\n    :class:`pandas.HDFStore`. Default is 'r'.\nerrors : str, default 'strict'\n    Specifies how encoding and decoding errors are to be handled.\n    See the errors argument for :func:`open` for a full list\n    of options.\nwhere : list, optional\n    A list of Term (or convertible) objects.\nstart : int, optional\n    Row number to start selection.\nstop  : int, optional\n    Row number to stop selection.\ncolumns : list, optional\n    A list of columns names to return.\niterator : bool, optional\n    Return an iterator object.\nchunksize : int, optional\n    Number of rows to include in an iteration when using an iterator.\n**kwargs\n    Additional keyword arguments passed to HDFStore.\n\nReturns\n-------\nitem : object\n    The selected object. Return type depends on the object stored.\n\nSee Also\n--------\nDataFrame.to_hdf : Write a HDF file from a DataFrame.\nHDFStore : Low-level access to HDF files.\n\nExamples\n--------\n>>> df = pd.DataFrame([[1, 1.0, 'a']], columns=['x', 'y', 'z'])  # doctest: +SKIP\n>>> df.to_hdf('./store.h5', 'data')  # doctest: +SKIP\n>>> reread = pd.read_hdf('./store.h5')  # doctest: +SKIP",
    "type": "object",
    "properties": {
        "name": {
            "title": "Name",
            "type": "string"
        },
        "type": {
            "title": "Type",
            "default": "hdf",
            "enum": [
                "hdf"
            ],
            "type": "string"
        },
        "id": {
            "title": "Id",
            "description": "DataAsset id",
            "type": "string",
            "format": "uuid"
        },
        "order_by": {
            "title": "Order By",
            "type": "array",
            "items": {
                "$ref": "#/definitions/Sorter"
            }
        },
        "batch_metadata": {
            "title": "Batch Metadata",
            "type": "object"
        },
        "batch_definitions": {
            "title": "Batch Definitions",
            "type": "array",
            "items": {
                "$ref": "#/definitions/BatchDefinition"
            }
        },
        "path_or_buf": {
            "title": "Path Or Buf",
            "anyOf": [
                {
                    "type": "string",
                    "format": "file-path"
                },
                {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 65536,
                    "format": "uri"
                },
                {}
            ]
        },
        "key": {
            "title": "Key"
        },
        "mode": {
            "title": "Mode",
            "default": "r",
            "type": "string"
        },
        "errors": {
            "title": "Errors",
            "default": "strict",
            "type": "string"
        },
        "where": {
            "title": "Where",
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "array",
                    "items": {}
                }
            ]
        },
        "start": {
            "title": "Start",
            "type": "integer"
        },
        "stop": {
            "title": "Stop",
            "type": "integer"
        },
        "columns": {
            "title": "Columns",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "iterator": {
            "title": "Iterator",
            "default": false,
            "type": "boolean"
        },
        "chunksize": {
            "title": "Chunksize",
            "type": "integer"
        },
        "kwargs": {
            "title": "Kwargs",
            "description": "Extra keyword arguments that will be passed to the reader method",
            "type": "object"
        }
    },
    "required": [
        "name",
        "path_or_buf"
    ],
    "additionalProperties": false,
    "definitions": {
        "Sorter": {
            "title": "Sorter",
            "type": "object",
            "properties": {
                "key": {
                    "title": "Key",
                    "type": "string"
                },
                "reverse": {
                    "title": "Reverse",
                    "default": false,
                    "type": "boolean"
                }
            },
            "required": [
                "key"
            ]
        },
        "PartitionerYear": {
            "title": "PartitionerYear",
            "description": "--Public API--",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year",
                    "enum": [
                        "partition_on_year"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ]
        },
        "PartitionerYearAndMonth": {
            "title": "PartitionerYearAndMonth",
            "description": "--Public API--",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month",
                    "enum": [
                        "partition_on_year_and_month"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ]
        },
        "PartitionerYearAndMonthAndDay": {
            "title": "PartitionerYearAndMonthAndDay",
            "description": "--Public API--",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month_and_day",
                    "enum": [
                        "partition_on_year_and_month_and_day"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ]
        },
        "PartitionerConvertedDatetime": {
            "title": "PartitionerConvertedDatetime",
            "description": "--Public API--",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_converted_datetime",
                    "enum": [
                        "partition_on_converted_datetime"
                    ],
                    "type": "string"
                },
                "date_format_string": {
                    "title": "Date Format String",
                    "type": "string"
                }
            },
            "required": [
                "column_name",
                "date_format_string"
            ]
        },
        "PartitionerYearly": {
            "title": "PartitionerYearly",
            "type": "object",
            "properties": {
                "regex": {
                    "title": "Regex",
                    "type": "string",
                    "format": "regex"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "param_names": {
                    "title": "Param Names",
                    "default": [
                        "year"
                    ],
                    "type": "array",
                    "items": {}
                }
            },
            "required": [
                "regex"
            ]
        },
        "PartitionerMonthly": {
            "title": "PartitionerMonthly",
            "type": "object",
            "properties": {
                "regex": {
                    "title": "Regex",
                    "type": "string",
                    "format": "regex"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "param_names": {
                    "title": "Param Names",
                    "default": [
                        "year",
                        "month"
                    ],
                    "type": "array",
                    "items": {}
                }
            },
            "required": [
                "regex"
            ]
        },
        "PartitionerDaily": {
            "title": "PartitionerDaily",
            "type": "object",
            "properties": {
                "regex": {
                    "title": "Regex",
                    "type": "string",
                    "format": "regex"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "param_names": {
                    "title": "Param Names",
                    "default": [
                        "year",
                        "month",
                        "day"
                    ],
                    "type": "array",
                    "items": {}
                }
            },
            "required": [
                "regex"
            ]
        },
        "PartitionerPath": {
            "title": "PartitionerPath",
            "type": "object",
            "properties": {
                "regex": {
                    "title": "Regex",
                    "type": "string",
                    "format": "regex"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                }
            },
            "required": [
                "regex"
            ]
        },
        "BatchDefinition": {
            "title": "BatchDefinition",
            "description": "Configuration for a batch of data.\n\nReferences the DataAsset to be used, and any additional parameters needed to fetch the data.",
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "partitioner": {
                    "title": "Partitioner",
                    "anyOf": [
                        {
                            "$ref": "#/definitions/PartitionerYear"
                        },
                        {
                            "$ref": "#/definitions/PartitionerYearAndMonth"
                        },
                        {
                            "$ref": "#/definitions/PartitionerYearAndMonthAndDay"
                        },
                        {
                            "$ref": "#/definitions/PartitionerConvertedDatetime"
                        },
                        {
                            "$ref": "#/definitions/PartitionerYearly"
                        },
                        {
                            "$ref": "#/definitions/PartitionerMonthly"
                        },
                        {
                            "$ref": "#/definitions/PartitionerDaily"
                        },
                        {
                            "$ref": "#/definitions/PartitionerPath"
                        }
                    ]
                }
            },
            "required": [
                "name"
            ]
        }
    }
}
